{"version":3,"sources":["webpack:///./src/pages/baby-samples-savings-new.js","webpack:///./src/components/layout-offer.js","webpack:///./node_modules/gatsby-background-image/index.js","webpack:///./node_modules/gatsby-background-image/BackgroundUtils.js"],"names":["BabySamplesSavings","render","url","q","this","props","location","search","slice","react__WEBPACK_IMPORTED_MODULE_2___default","a","createElement","_components_layout_offer__WEBPACK_IMPORTED_MODULE_3__","_components_seo__WEBPACK_IMPORTED_MODULE_4__","title","keywords","className","href","gatsby__WEBPACK_IMPORTED_MODULE_5__","to","React","Component","Layout","_ref","children","react__WEBPACK_IMPORTED_MODULE_1___default","gatsby__WEBPACK_IMPORTED_MODULE_3__","query","data","imageData","desktop","childImageSharp","fluid","gatsby_background_image__WEBPACK_IMPORTED_MODULE_6___default","Tag","backgroundColor","style","minHeight","_footer__WEBPACK_IMPORTED_MODULE_4__","_public_static_d_2496561723_json__WEBPACK_IMPORTED_MODULE_0__","propTypes","PropTypes","node","isRequired","_interopRequireDefault","__webpack_require__","exports","__esModule","default","createImageToLoad","_react","_propTypes","_BackgroundUtils","convertProps","convertedProps","Object","assign","resolutions","fixed","sizes","window","img","Image","complete","onLoad","addEventListener","onError","src","imageCache","inImageCache","activateCacheForImage","io","listeners","listenToIntersections","el","cb","IntersectionObserver","entries","forEach","entry","l","target","isIntersecting","intersectionRatio","unobserve","rootMargin","observe","push","noscriptImg","srcSetWebp","srcSet","alt","width","height","opacity","transitionDelay","createPseudoStyles","classId","backgroundSize","backgroundRepeat","bgImage","nextImage","afterOpacity","bgColor","BackgroundImage","[object Object]","super","isVisible","IOSupported","fadeIn","seenBefore","critical","hasNoScript","state","imgLoaded","backgroundStyles","imageRef","handleImageLoaded","bind","handleRef","onStartLoad","wasCached","ref","setState","_convertProps","_convertProps$style","_convertProps$classId","Math","random","toString","replace","substr","hasOwnProperty","image","tracedSVG","base64","pseudoStyles","position","overflow","key","JSON","stringify","dangerouslySetInnerHTML","__html","divStyle","display","defaultProps","fixedObject","shape","number","string","srcWebp","fluidObject","aspectRatio","bool","oneOfType","object","imgStyle","placeholderStyle","placeholderClassName","func","_default","getBackgroundStylesForSingleClass","cssStyleRules","styleContent","document","doc","implementation","createHTMLDocument","styleElement","textContent","body","appendChild","sheet","cssRules","rulesForCssText","styleSheets","i","length","classes","rules","e","console","debug","x","selectorText","ret","cssText","indexOf","getStyle","keys","styles","constructor","name","values","prop","str","toLowerCase","letter","index","toUpperCase","toCamelCase","error","getStyleRules","filter","k","reduce","newData","String","Array","includes","split","classObjects","item"],"mappings":"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","file":"component---src-pages-baby-samples-savings-new-js-6e2cbd24ecf223d6c8fc.js","sourcesContent":["import React from 'react'\nimport Layout from '../components/layout-offer'\nimport SEO from '../components/seo'\nimport { Link } from 'gatsby'\n\nexport default class BabySamplesSavings extends React.Component {\n  render() {\n    const url =\n      'https://www.mb102.com/lnk.asp?o=12088&c=918277&a=367983&k=18C219D555218DF6260B6A9C28EC5F5D&l=12366'\n\n    const q = this.props.location.search.slice(1)\n\n    return (\n      <Layout>\n        <SEO\n          title=\"Free Diapers Samples| GB Offers\"\n          keywords={[`free diapers`, `diapers samples`, `best samples`]}\n        />\n        <div className=\"wrapper\">\n          <div className=\"main\">\n            <div className=\"box\">\n              <h1>How Did You Hear About This Offer?</h1>\n              <h3>RECEIVE A FREE BOX OF BABY SAMPLES</h3>\n\n              <a href={url} title=\"Instagram\" className=\"btn-blue\">\n                INSTAGRAM\n              </a>\n              <a href={url} title=\"Facebook\" className=\"btn-blue\">\n                FACEBOOK\n              </a>\n              <a href={url} title=\"Google\" className=\"btn-blue\">\n                GOOGLE\n              </a>\n              {`${url}&${q}`}\n              <Link to={`${url}&${q}`}>My Link</Link>\n            </div>\n          </div>\n        </div>\n      </Layout>\n    )\n  }\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { StaticQuery, graphql } from 'gatsby'\n\nimport Footer from './footer'\nimport './layout.css'\nimport BackgroundImage from 'gatsby-background-image'\n\nconst Layout = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query {\n        desktop: file(relativePath: { eq: \"background.jpg\" }) {\n          childImageSharp {\n            fluid(quality: 100, maxWidth: 4160) {\n              ...GatsbyImageSharpFluid_withWebp\n            }\n          }\n        }\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => {\n      // Set ImageData.\n      const imageData = data.desktop.childImageSharp.fluid\n      return (\n        <BackgroundImage\n          Tag=\"section\"\n          fluid={imageData}\n          backgroundColor={`#040e18`}\n          style={{ minHeight: '100vh' }}\n        >\n          <div className=\"content-page\">{children}</div>\n          <Footer />\n        </BackgroundImage>\n      )\n    }}\n  />\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nexports.__esModule = true;\nexports.default = exports.createImageToLoad = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _BackgroundUtils = _interopRequireDefault(require(\"./BackgroundUtils\"));\n\n// Handle legacy names for image queries.\nconst convertProps = props => {\n  let convertedProps = Object.assign({}, props);\n\n  if (convertedProps.resolutions) {\n    convertedProps.fixed = convertedProps.resolutions;\n    delete convertedProps.resolutions;\n  }\n\n  if (convertedProps.sizes) {\n    convertedProps.fluid = convertedProps.sizes;\n    delete convertedProps.sizes;\n  }\n\n  return convertedProps;\n}; // Create lazy image loader with Image().\n// Only get's exported for tests!\n\n\nconst createImageToLoad = props => {\n  if (typeof window !== `undefined`) {\n    const convertedProps = convertProps(props);\n    const img = new Image();\n\n    if (!img.complete && typeof convertedProps.onLoad === `function`) {\n      img.addEventListener('load', convertedProps.onLoad);\n    }\n\n    if (typeof convertedProps.onError === `function`) {\n      img.addEventListener('error', convertedProps.onError);\n    } // Find src\n\n\n    img.src = convertedProps.fluid ? convertedProps.fluid.src : convertedProps.fixed.src;\n    return img;\n  }\n\n  return null;\n}; // Cache if we've seen an image before so we don't both with\n// lazy-loading & fading in on subsequent mounts.\n\n\nexports.createImageToLoad = createImageToLoad;\nconst imageCache = {};\n\nconst inImageCache = props => {\n  const convertedProps = convertProps(props); // Find src\n\n  const src = convertedProps.fluid ? convertedProps.fluid.src : convertedProps.fixed.src;\n  return imageCache[src] || false;\n};\n\nconst activateCacheForImage = props => {\n  const convertedProps = convertProps(props); // Find src\n\n  const src = convertedProps.fluid ? convertedProps.fluid.src : convertedProps.fixed.src;\n  imageCache[src] = true;\n};\n\nlet io;\nconst listeners = [];\n\nfunction getIO() {\n  if (typeof io === `undefined` && typeof window !== `undefined` && window.IntersectionObserver) {\n    io = new window.IntersectionObserver(entries => {\n      entries.forEach(entry => {\n        listeners.forEach(l => {\n          if (l[0] === entry.target) {\n            // Edge doesn't currently support isIntersecting, so also test for an intersectionRatio > 0\n            if (entry.isIntersecting || entry.intersectionRatio > 0) {\n              io.unobserve(l[0]);\n              l[1]();\n            }\n          }\n        });\n      });\n    }, {\n      rootMargin: `200px`\n    });\n  }\n\n  return io;\n}\n\nconst listenToIntersections = (el, cb) => {\n  getIO().observe(el);\n  listeners.push([el, cb]);\n};\n\nconst noscriptImg = props => {\n  // Check if prop exists before adding each attribute to the string output below to prevent\n  // HTML validation issues caused by empty values like width=\"\" and height=\"\"\n  const src = props.src ? `src=\"${props.src}\" ` : `src=\"\" `; // required attribute\n\n  const sizes = props.sizes ? `sizes=\"${props.sizes}\" ` : ``;\n  const srcSetWebp = props.srcSetWebp ? `<source type='image/webp' srcSet=\"${props.srcSetWebp}\" ${sizes}/>` : ``;\n  const srcSet = props.srcSet ? `<source srcSet=\"${props.srcSet}\" ${sizes}/>` : ``;\n  const title = props.title ? `title=\"${props.title}\" ` : ``;\n  const alt = props.alt ? `alt=\"${props.alt}\" ` : `alt=\"\" `; // required attribute\n\n  const width = props.width ? `width=\"${props.width}\" ` : ``;\n  const height = props.height ? `height=\"${props.height}\" ` : ``;\n  const opacity = props.opacity ? props.opacity : `1`;\n  const transitionDelay = props.transitionDelay ? props.transitionDelay : `0.5s`;\n  return `<picture>${srcSetWebp}${srcSet}<img ${width}${height}${src}${alt}${title}style=\"position:absolute;top:0;left:0;transition:opacity 0.5s;transition-delay:${transitionDelay};opacity:${opacity};width:100%;height:100%;object-fit:cover;object-position:center\"/></picture>`;\n};\n\nconst createPseudoStyles = ({\n  classId,\n  backgroundSize,\n  backgroundRepeat,\n  transitionDelay,\n  bgImage,\n  nextImage,\n  afterOpacity,\n  bgColor\n}) => {\n  return `\n          .gatsby-background-image-${classId}:before,\n          .gatsby-background-image-${classId}:after {\n            content: '';\n            display: block;\n            position: absolute;\n            width: 100%;\n            height: 100%;\n            top: 0;\n            left: 0;\n            -webkit-background-size: ${backgroundSize};\n            -moz-background-size: ${backgroundSize};\n            -o-background-size: ${backgroundSize};\n            background-size: ${backgroundSize};\n            transition: opacity ${transitionDelay} ease-in-out;\n            -webkit-transition: opacity ${transitionDelay} ease-in-out;\n            -moz-transition: opacity ${transitionDelay} ease-in-out;\n            -o-transition: opacity ${transitionDelay} ease-in-out;\n          }\n          .gatsby-background-image-${classId}:before {\n            z-index: -101;\n            background-color: ${bgColor};\n            background-image: url(${bgImage});\n            ${backgroundRepeat}\n          }\n          .gatsby-background-image-${classId}:after {\n            z-index: -100;\n            background-image: url(${nextImage});\n            ${backgroundRepeat}\n            opacity: ${afterOpacity};\n          }\n        `;\n};\n\nclass BackgroundImage extends _react.default.Component {\n  constructor(props) {\n    super(props); // default settings for browser without Intersection Observer available\n\n    let isVisible = true;\n    let imgLoaded = false;\n    let IOSupported = false;\n    let fadeIn = props.fadeIn; // If this image has already been loaded before then we can assume it's\n    // already in the browser cache so it's cheap to just show directly.\n\n    const seenBefore = inImageCache(props); // browser with Intersection Observer available\n\n    if (!seenBefore && typeof window !== `undefined` && window.IntersectionObserver) {\n      isVisible = false;\n      IOSupported = true;\n    } // Never render image during SSR\n\n\n    if (typeof window === `undefined`) {\n      isVisible = false;\n    } // Force render for critical images\n\n\n    if (props.critical) {\n      isVisible = true;\n      IOSupported = false;\n    }\n\n    const hasNoScript = !(this.props.critical && !this.props.fadeIn);\n    this.state = {\n      isVisible,\n      imgLoaded,\n      IOSupported,\n      fadeIn,\n      hasNoScript,\n      seenBefore\n    };\n    this.bgImage = ``; // Get background(-*) styles from CSS (e.g. Styled Components).\n\n    this.backgroundStyles = (0, _BackgroundUtils.default)(this.props.className); // \"Fake\" a reference to an Image loaded in background.\n\n    this.imageRef = createImageToLoad(this.props);\n    this.handleImageLoaded = this.handleImageLoaded.bind(this);\n    this.handleRef = this.handleRef.bind(this);\n  }\n\n  componentDidMount() {\n    if (this.state.isVisible && typeof this.props.onStartLoad === `function`) {\n      this.props.onStartLoad({\n        wasCached: inImageCache(this.props)\n      });\n    }\n\n    if (this.props.critical) {\n      const img = this.imageRef;\n\n      if (img && img.complete) {\n        this.handleImageLoaded();\n      }\n    }\n  }\n\n  handleRef(ref) {\n    if (this.state.IOSupported && ref) {\n      listenToIntersections(ref, () => {\n        if (!this.state.isVisible && typeof this.props.onStartLoad === `function`) {\n          this.props.onStartLoad({\n            wasCached: inImageCache(this.props)\n          });\n        }\n\n        this.setState({\n          isVisible: true,\n          imgLoaded: false\n        });\n      });\n    }\n  }\n\n  handleImageLoaded() {\n    activateCacheForImage(this.props);\n    this.setState({\n      imgLoaded: true\n    });\n\n    if (this.state.seenBefore) {\n      this.setState({\n        fadeIn: false\n      });\n    }\n\n    if (this.props.onLoad) {\n      this.props.onLoad();\n    }\n  }\n\n  render() {\n    const _convertProps = convertProps(this.props),\n          title = _convertProps.title,\n          alt = _convertProps.alt,\n          className = _convertProps.className,\n          _convertProps$style = _convertProps.style,\n          style = _convertProps$style === void 0 ? {} : _convertProps$style,\n          fluid = _convertProps.fluid,\n          fixed = _convertProps.fixed,\n          backgroundColor = _convertProps.backgroundColor,\n          Tag = _convertProps.Tag,\n          _convertProps$classId = _convertProps.classId,\n          classId = _convertProps$classId === void 0 ? Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, 7) : _convertProps$classId,\n          children = _convertProps.children;\n\n    const bgColor = typeof backgroundColor === `boolean` ? `lightgray` : backgroundColor;\n    const backgroundSize = this.backgroundStyles.hasOwnProperty(`backgroundSize`) ? this.backgroundStyles.backgroundSize : `cover`;\n    const backgroundRepeat = `background-repeat: ${this.backgroundStyles.hasOwnProperty(`backgroundRepeat`) ? this.backgroundStyles.backgroundRepeat : `no-repeat`};`;\n    const transitionDelay = this.state.imgLoaded ? `0.5s` : `0.25s`;\n\n    if (fluid) {\n      const image = fluid; // Set the backgroundImage according to images available.\n\n      let bgImage = this.bgImage,\n          nextImage = null;\n      if (image.tracedSVG) nextImage = `\"${image.tracedSVG}\"`;\n      if (image.base64 && !image.tracedSVG) nextImage = image.base64;\n      if (this.state.isVisible) nextImage = image.src; // Switch bgImage & nextImage and opacity accordingly.\n\n      bgImage = bgImage === `` ? nextImage : this.bgImage;\n      const afterOpacity = nextImage !== bgImage || this.state.fadeIn === false ? 1 : 0;\n      this.bgImage = bgImage;\n      const pseudoStyles = {\n        classId,\n        backgroundSize,\n        backgroundRepeat,\n        transitionDelay,\n        bgImage,\n        nextImage,\n        afterOpacity,\n        bgColor\n      };\n      return _react.default.createElement(Tag, {\n        className: `${className ? className : ``} gatsby-background-image-${classId} gatsby-image-wrapper`,\n        style: Object.assign({\n          position: `relative`,\n          overflow: `hidden`\n        }, style, this.backgroundStyles),\n        ref: this.handleRef,\n        key: `fluid-${JSON.stringify(image.srcSet)}`\n      }, _react.default.createElement(\"style\", {\n        dangerouslySetInnerHTML: {\n          __html: createPseudoStyles(pseudoStyles)\n        }\n      }), this.state.hasNoScript && _react.default.createElement(\"noscript\", {\n        dangerouslySetInnerHTML: {\n          __html: noscriptImg(Object.assign({\n            alt,\n            title\n          }, image))\n        }\n      }), children);\n    }\n\n    if (fixed) {\n      const image = fixed;\n      const divStyle = Object.assign({\n        position: `relative`,\n        overflow: `hidden`,\n        display: `inline-block`,\n        width: image.width,\n        height: image.height\n      }, style);\n\n      if (style.display === `inherit`) {\n        delete divStyle.display;\n      } // Set the backgroundImage according to images available.\n\n\n      let bgImage = this.bgImage,\n          nextImage = ``;\n      if (image.tracedSVG) nextImage = `'${image.tracedSVG}'`;\n      if (image.base64 && !image.tracedSVG) nextImage = image.base64;\n      if (this.state.isVisible) nextImage = image.src; // Switch bgImage & nextImage and opacity accordingly.\n\n      bgImage = bgImage === `` ? nextImage : ``;\n      const afterOpacity = nextImage !== bgImage ? 1 : 0;\n      this.bgImage = bgImage;\n      const pseudoStyles = {\n        classId,\n        backgroundSize,\n        backgroundRepeat,\n        transitionDelay,\n        bgImage,\n        nextImage,\n        afterOpacity\n      };\n      return _react.default.createElement(Tag, {\n        className: `${className ? className : ``} gatsby-background-image-${classId} gatsby-image-wrapper`,\n        style: Object.assign({}, divStyle, this.backgroundStyles),\n        ref: this.handleRef,\n        key: `fixed-${JSON.stringify(image.srcSet)}`\n      }, _react.default.createElement(\"style\", {\n        dangerouslySetInnerHTML: {\n          __html: createPseudoStyles(pseudoStyles)\n        }\n      }), this.state.hasNoScript && _react.default.createElement(\"noscript\", {\n        dangerouslySetInnerHTML: {\n          __html: noscriptImg(Object.assign({\n            alt,\n            title,\n            width: image.width,\n            height: image.height\n          }, image))\n        }\n      }), children);\n    }\n\n    return null;\n  }\n\n}\n\nBackgroundImage.defaultProps = {\n  critical: false,\n  fadeIn: true,\n  alt: ``,\n  Tag: `div`\n};\n\nconst fixedObject = _propTypes.default.shape({\n  width: _propTypes.default.number.isRequired,\n  height: _propTypes.default.number.isRequired,\n  src: _propTypes.default.string.isRequired,\n  srcSet: _propTypes.default.string.isRequired,\n  base64: _propTypes.default.string,\n  tracedSVG: _propTypes.default.string,\n  srcWebp: _propTypes.default.string,\n  srcSetWebp: _propTypes.default.string\n});\n\nconst fluidObject = _propTypes.default.shape({\n  aspectRatio: _propTypes.default.number.isRequired,\n  src: _propTypes.default.string.isRequired,\n  srcSet: _propTypes.default.string.isRequired,\n  sizes: _propTypes.default.string.isRequired,\n  base64: _propTypes.default.string,\n  tracedSVG: _propTypes.default.string,\n  srcWebp: _propTypes.default.string,\n  srcSetWebp: _propTypes.default.string\n});\n\nBackgroundImage.propTypes = {\n  resolutions: fixedObject,\n  sizes: fluidObject,\n  fixed: fixedObject,\n  fluid: fluidObject,\n  fadeIn: _propTypes.default.bool,\n  title: _propTypes.default.string,\n  alt: _propTypes.default.string,\n  className: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.object]),\n  // Support Glamor's css prop.\n  critical: _propTypes.default.bool,\n  style: _propTypes.default.object,\n  imgStyle: _propTypes.default.object,\n  placeholderStyle: _propTypes.default.object,\n  placeholderClassName: _propTypes.default.string,\n  backgroundColor: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.bool]),\n  onLoad: _propTypes.default.func,\n  onError: _propTypes.default.func,\n  onStartLoad: _propTypes.default.func,\n  Tag: _propTypes.default.string,\n  classId: _propTypes.default.string\n};\nvar _default = BackgroundImage;\nexports.default = _default;","\"use strict\";\n\nexports.__esModule = true;\nexports.default = void 0;\n\n/**\n * Gets styles by a class name.\n *\n * @notice The className has to exactly match the CSS class\n * @param className string\n */\nconst getStyle = className => {\n  const styleSheets = typeof window !== `undefined` ? window.document.styleSheets : [];\n\n  for (let i = 0; i < styleSheets.length; i++) {\n    let classes;\n\n    try {\n      classes = typeof styleSheets[i].rules !== 'undefined' ? styleSheets[i].rules : typeof styleSheets[i].cssRules !== 'undefined' ? styleSheets[i].cssRules : '';\n    } catch (e) {\n      console.debug(`Unable to read stylesheet rules for ${styleSheets[i].href}`, e);\n    }\n\n    if (!classes) continue;\n\n    for (let x = 0; x < classes.length; x++) {\n      if (classes[x].selectorText === className) {\n        const ret = classes[x].cssText ? classes[x].cssText : classes[x].style.cssText;\n\n        if (ret.indexOf(classes[x].selectorText) === -1) {\n          return `${classes[x].selectorText}{${ret}}`;\n        }\n\n        return ret;\n      }\n    }\n  }\n};\n/**\n * Gets rules from a css Text.\n *\n * @param styleContent\n * @return {*}\n */\n\n\nconst rulesForCssText = function rulesForCssText(styleContent) {\n  if (typeof document !== `undefined`) {\n    const doc = document.implementation.createHTMLDocument(''),\n          styleElement = document.createElement('style');\n    styleElement.textContent = styleContent; // the style will only be parsed once it is added to a document\n\n    doc.body.appendChild(styleElement);\n    return styleElement.sheet.cssRules;\n  }\n\n  return {};\n};\n/**\n * Changes CSS background(-*) strings to js rules.\n * @param str\n * @return {string}\n */\n\n\nconst toCamelCase = str => str.toLowerCase().replace(/(?:^\\w|-|[A-Z]|\\b\\w)/g, (letter, index) => index === 0 ? letter.toLowerCase() : letter.toUpperCase()).replace(/\\s|\\W+/g, '');\n/**\n * Fixes non-enumerable style rules in Firefox.\n * @param cssStyleRules\n */\n\n\nconst getStyleRules = cssStyleRules => {\n  let styles = {};\n\n  if (cssStyleRules.length > 0 && typeof cssStyleRules[0].style !== 'undefined') {\n    switch (cssStyleRules[0].style.constructor.name) {\n      case 'CSS2Properties':\n        Object.values(cssStyleRules[0].style).forEach(prop => {\n          styles[toCamelCase(prop)] = cssStyleRules[0].style[prop];\n        });\n        break;\n\n      case 'CSSStyleDeclaration':\n        styles = cssStyleRules[0].style;\n        break;\n\n      default:\n        console.error('Unknown style object prototype');\n        break;\n    }\n  }\n\n  return styles;\n};\n/**\n * Filters out Background Rules for a given class Name.\n * @param className\n * @return {{}}\n */\n\n\nconst getBackgroundStylesForSingleClass = className => {\n  const style = getStyle(`.${className}`);\n  const cssStyleRules = rulesForCssText(style);\n\n  if (cssStyleRules.length > 0 && typeof cssStyleRules[0].style !== 'undefined') {\n    // Filter out background(-*) rules that contain a definition.\n    return Object.keys(getStyleRules(cssStyleRules)).filter(k => k.indexOf('background') === 0 && cssStyleRules[0].style[k] !== '').reduce((newData, k) => {\n      newData[k] = cssStyleRules[0].style[k];\n      return newData;\n    }, {});\n  }\n\n  return {};\n};\n/**\n * Uses the above to get all background(-*) rules from given class(es).\n *\n * @param className   string|array    className or array of classNames\n * @return {*}\n */\n\n\nconst getBackgroundStyles = className => {\n  if (typeof window !== 'undefined' && className !== null && (className instanceof Object || className instanceof String || typeof className === 'string') && !(className instanceof Array)) {\n    if (className.includes(' ')) {\n      const classes = className.split(' ');\n      let classObjects = [];\n      classes.forEach(item => classObjects.push(getBackgroundStylesForSingleClass(item)));\n      return Object.assign(...classObjects);\n    }\n\n    return getBackgroundStylesForSingleClass(className);\n  }\n\n  return {};\n};\n\nvar _default = getBackgroundStyles;\nexports.default = _default;"],"sourceRoot":""}